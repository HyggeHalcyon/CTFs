import { Injectable } from '@nestjs/common';
import { Redis } from 'ioredis';

@Injectable()
export class KVService {
  private readonly redisClient: Redis;

  constructor() {
    // ... snippet
  }

  async find(pattern: string): Promise<string[]> {
    pattern = pattern.replace(/[^a-zA-Z0-9.@]/g, ''); // <-- PATCH
    return this.redisClient.keys(pattern);
  }

  async get(key: string): Promise<any> {
    key = key.replace(/[^a-zA-Z0-9.@]/g, ''); // <-- PATCH
    return JSON.parse(await this.redisClient.get(key));
  }

  async set(key: string, value: any, ttl: number = 0): Promise<void> {
    // ... snippet
  }

  async del(key: string): Promise<void> {
    // ... snippet
  }
}
